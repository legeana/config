#!/bin/bash -e

config="$(dirname "$(readlink -f "$0")")"

# note: for backward compatibility entries should not be removed
# new file locations should be added to front
install_files=(
    "$config/.install"
)

current_install_file="${install_files[0]}"

prefix="$config"
suffix=""
while [[ $prefix != $HOME ]]
do
    suffix="$(basename "$prefix")"
    prefix="$(dirname "$prefix")"
done

safeln()
{
    if [[ -e ${2:-Need to specify destination} ]]
    then
        if [[ -h $2 ]]
        then
            rm "$2"
        else
            echo "Unable to override: $2" >&2 && exit 1
        fi
    fi
    ln -vs "$1" "$2"
}

saferm()
{
    local i
    for i
    do
        if [[ -h $i ]]
        then
            rm -vf "$i"
        else
            echo "Unable to remove: $i" >&2 # not fatal
        fi
    done
}

install()
{
    for i
    do
        local fname="$(basename "$i")"
        safeln "$i" "$HOME/$fname"
        echo "$fname" >>"$current_install_file"
    done
}

cinstall()
{
    for i
    do
        install "$suffix/$i"
    done
}

uninstall()
{
    local f
    for f in "${install_files[@]}"
    do
        if [[ -e $f ]]
        then
            if [[ -f $f ]]
            then
                while read line
                do
                    if [[ -n $line ]]
                    then
                        saferm "$line"
                    fi
                done <"$f"
                rm -f "$f"
            else
                echo "Invalid file type: $f" >&2 && exit 1
            fi
        fi
    done
}

cd "$prefix"

only_uninstall=""

while getopts "uh" arg
do
    case "$arg" in
        u) only_uninstall="1";;
        h) ;;&
        ?) printf "Usage: %s: [-u only uninstall]\n" "$0" 1>&2 && exit 1;;
    esac
done
shift "$((OPTIND - 1))"

uninstall

if [[ -z $only_uninstall ]]
then
    install \
        "$suffix/.z"* \

    if [[ -d $suffix/$HOST ]]
    then
        install \
            "$suffix/local/$(hostname)/.z"* \

    fi

    cinstall \
        bin \
        .config \
        .gdbinit \
        .gitconfig \
        .mplayer \
        .parallel \
        .tmux.conf \
        .vimrc \
        .Xdefaults \
        .yaourtrc \

fi
