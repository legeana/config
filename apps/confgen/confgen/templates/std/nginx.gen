# server.listen
{% macro _listen(port, modifiers) %}
listen      {{port}} {{modifiers}};
listen [::]:{{port}} {{modifiers}};
{% endmacro %}

{% macro listen_http(port=80) %}
{{_listen(port, "")}}
{% endmacro %}

{% macro listen_https(port=443) %}
{{_listen(port, "ssl http2")}}
{% endmacro %}

{% macro listen_disable() %}
listen 127.0.0.1:41285;
{% endmacro %}

{% macro listen_letsencrypt(server_cert_name, port=443) %}
{% set ssl_certificate = '/etc/letsencrypt/live/' + server_cert_name + '/fullchain.pem' %}
{% set ssl_certificate_key = '/etc/letsencrypt/live/' + server_cert_name + '/privkey.pem' %}
{% if exists(ssl_certificate) and exists(ssl_certificate_key) %}
    {{listen_https(port)}}
    ssl_certificate {{ssl_certificate}};
    ssl_certificate_key {{ssl_certificate_key}};
{% else %}
    {{listen_disable()}}
{% endif %}
include /etc/letsencrypt/options-ssl-nginx.conf;
{% endmacro %}

# server.logging
{% macro log(server_name) %}
{% if server_name.startswith('www.') %}
    {# merge www.X and X #}
    {% set server_name = server_name[4:] %}
{% endif %}
access_log  /var/log/nginx/{{server_name}}-access.log;
error_log   /var/log/nginx/{{server_name}}-error.log error;
{% endmacro %}

# server
{% macro server_http(server_name, server_aliases=[]) %}
server_name {{server_name}} {{' '.join(server_aliases)}};
{{listen_http()}}
{{log(server_name)}}
{% endmacro %}

{% macro server_letsencrypt(server_name, cert_name=None, server_aliases=[]) %}
{% if cert_name == None %}
    {% set cert_name = server_name %}
{% endif %}
server_name {{server_name}} {{' '.join(server_aliases)}};
{{listen_letsencrypt(cert_name)}}
{{log(server_name)}}
{% endmacro %}

# acme
{% macro acme_challenge(server_name) %}
location / {
    return 302 https://{{server_name}}$request_uri;
}
location /.well-known/acme-challenge {
    root /var/lib/letsencrypt;
    default_type "text/plain";
    try_files $uri =404;
}
{% endmacro %}

{% macro acme_servers(server_names) %}
{% for server_name in server_names %}
server {
    server_name {{server_name}};
    {{listen_http()}}
    {{log(server_name)}}
    {{acme_challenge(server_name)}}
}
{% endfor %}
{% endmacro %}

# matrix
{% macro matrix_challenge(matrix_server) %}
location /.well-known/matrix/client {
    return 200 '{"m.server": {"base_url": "{{matrix_server}}"}}';
    default_type application/json;
    add_header Access-Control-Allow-Origin *;
}
location /.well-known/matrix/server {
    default_type application/json;
    add_header Access-Control-Allow-Origin *;
    return 200 '{"m.server":"{{matrix_server}}"}';
}
{% endmacro %}
